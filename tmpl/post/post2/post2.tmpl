{{template "layout" .}}

{{define "title"}}Improved Developer Workflow{{end}}

{{define "main"}}

  <div class="header">
    <h1 style="color: lightblue;">Improved Developer Workflow & Building a Writers' Platform</h1>
  </div>

  <div class="author-info">
    <img class="author-img" src="static/images/o.jpeg" alt="Osagie Godstand">
    <div class="text-sm">
      By Osagie Godstand
      on Jun 08, 2025
    </div>
  </div>

  <div class="content">
  <p>
  My software development workflow and overall computing experience have improved
  since the last time I posted about the tools that support and enhance my development
  experience. Since then, I’ve tried out other tools, and that experience has changed
  how I use my PC for the better.
  </p>


  <h2>Using Workspaces for better window management</h2>
  <p>
  Introducing Workspaces into my workflow has helped reduce clutter on my PC.
  I used to have many apps open in the same window and relied on Spotlight Search
  to find them whenever I needed to switch applications. It looked really messy until
  I discovered GNOME's Workspace configuration for Linux and the ability to achieve
  tiling window management-like behaviour on GNOME-based Linux desktops.
  </p>

  <p>
  This solved the problem, as it allows me to create as many Workspaces as I need.
  I can place all the applications I'm using at any given moment into a specific
  Workspace and easily switch between them using a few key commands configured for
  Workspace navigation. I also use a GNOME extension called Space Bar, which provides
  a tiling window manager-style status bar.
  </p>

  <img src="static/images/wm.jpg" alt="TWM" loading="lazy">

  <h2>Ditching Tmux Plugins</h2>
  <p>
  After using Tmux plugins like resurrect and continuum for a few weeks, I realized that
  I don’t really need a tool like this. I’d rather start a session manually, although
  I still use Tmux for creating new terminal windows and switching between them.
  I also tried using a Neovim debugger for Go called nvim-dap-go, and I didn’t
  find it as productive or useful as plain old print debugging.
  Maybe it’s a skill issue, but that’s just my opinion for now. I’ll probably
  give it another shot in the future... or maybe never again.
   </p>

  <h2>Building a Writers' Platform</h2>
  <p>
  I am currently building the web version of a writers' platform called Wreyte,
  formerly named Ken, aka the Knowledge Platform. The idea for this
  project started around November 2023, but I wasn’t quite sure what I really wanted.
  I just wanted to build something more sophisticated than a basic website, so I
  initially planned to create something similar to Reddit. Eventually, I decided to
  change that idea and started building a writers' platform around August 2024.
  </p>

  <p>
  At first, I thought my idea was not original and seemed trivial, so I was unsure
  if it was worth committing to. But after months of building some features and
  facing various challenges that I eventually overcame, I realized it was worth it.
  Since March 2025, I have decided to fully commit to building this project.
  </p>

  <p>
  My aim in working on this project is simply to learn and improve my software development
  skills, but at the same time, I want to build a great product. The plan is to launch
  version 1 of the Wreyte web app sometime in 2026. Although I can’t set an exact date due
  to the uncertainty of future events, I also plan to work on native iOS and Android versions
  of the app sometime in the future. This is a project I am truly passionate about.
  </p>


  <h2>To Conclude</h2>
  <p>
  My curiosity to learn and keep exploring has greatly improved my experience and
  significantly enhanced my workflow. I have also learned that software application
  ideas do not always need to be unique or cool, but rather meaningful.
  </p>

  <div class="links">
    <a href="posts">Back to Posts</a>
  </div>
</div>

{{end}}


